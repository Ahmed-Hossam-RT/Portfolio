# Bikeshare Data Analysis Using SQL Temporary Tables


## The bikeshare company wanted to celebrate the popularity of its most-used bike. The marketing team requested analysis on:

- The most-used bike in the system.
- The station where that bike is most commonly found.

## Objective
Analyze bikeshare data to find the most-used bike and the station where itâ€™s most commonly found using SQL temporary tables.

## Skills Demonstrated
- SQL (Temporary tables, data aggregation, querying)
- Data analysis with large datasets
- Problem-solving with real-world data

## Process
1. **Data Importation**: Imported bikeshare trip data from the database.
2. **Temporary Table Creation**: Used a temporary table to store aggregated data of bike trips and stations.
3. **Querying for Insights**: Queried the temporary table to find the most-used bike and associated station.
   
### Key SQL Code Snippet
```sql
CREATE TEMPORARY TABLE temp_bike_usage AS
SELECT bike_id, start_station_name, COUNT(*) AS trip_count
FROM bikeshare_trips
GROUP BY bike_id, start_station_name;


## SQL Code

WITH
  longest_used_bike as (
    SELECT
      bike_id, 
      SUM(duration_minutes) AS trip_duration
    FROM 
      bigquery-public-data.austin_bikeshare.bikeshare_trips
    GROUP BY
      bike_id
    ORDER BY
      trip_duration DESC
    LIMIT 1
  )


## find the station where the longest-used bike leaves most often
SELECT
  trips.start_station_id, 
  COUNT(*) AS trip_ct, 
FROM
  longest_used_bike AS longest
INNER JOIN
  bigquery-public-data.austin_bikeshare.bikeshare_trips AS trips
ON longest.bike_id = trips.bike_id
GROUP BY
  trips.start_station_id
ORDER BY
  trip_ct DESC
  LIMIT 1


